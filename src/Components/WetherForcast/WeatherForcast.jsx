import React, { useEffect, useState } from "react";
import { useLocation } from "react-router-dom";
import {
  FetchWetherForcast,
  Fetch3HoursWetherForcast,
} from "../../Apis/FetchWetherForcast";
import styles from "./WeatherForcast.module.css";
import clear from "./../../assets/bg/clear.jpg";
import snow from "./../../assets/bg/snow.jpg";
import clouds from "./../../assets/bg/clouds.jpg";
import mist from "./../../assets/bg/mist.jpg";
import rain from "./../../assets/bg/rain.jpg";
import clouds_night from "./../../assets/bg/clouds-night.jpg";
import thunderstorm from "./../../assets/bg/thunderstorm.jpg";
import scatter from "./../../assets/bg/scatter.jpeg";
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

const WeatherForcast = () => {
  const { state } = useLocation();
  const [weatherData, SetWeatherData] = useState();
  const [_3HourweatherData, Set3HourWeatherData] = useState();

  const WeatherList = [
    {
      WeatherType: "Temp max",
      weatherval:
        (((weatherData?.main.temp_max - 32) * 5) / 9).toFixed(2) + "°",
      svg: (
        <svg
          width="14"
          height="26"
          viewBox="0 0 14 26"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M8.14831 16.8763V11.2272C8.14831 10.9138 8.02569 10.6132 7.80743 10.3916C7.58917 10.1699 7.29314 10.0454 6.98448 10.0454C6.67581 10.0454 6.37978 10.1699 6.16152 10.3916C5.94326 10.6132 5.82064 10.9138 5.82064 11.2272V16.8763C5.46884 17.0826 5.17632 17.3787 4.97214 17.7353C4.76797 18.0919 4.65925 18.4965 4.6568 18.909C4.6568 19.5359 4.90204 20.1371 5.33856 20.5804C5.77508 21.0236 6.36714 21.2727 6.98448 21.2727C7.60181 21.2727 8.19387 21.0236 8.63039 20.5804C9.06691 20.1371 9.31215 19.5359 9.31215 18.909C9.3097 18.4965 9.20098 18.0919 8.99681 17.7353C8.79263 17.3787 8.50011 17.0826 8.14831 16.8763ZM12.2217 14.1818V5.31817C12.2217 3.9077 11.67 2.555 10.6878 1.55765C9.7056 0.560305 8.37348 0 6.98448 0C5.59547 0 4.26335 0.560305 3.28117 1.55765C2.29899 2.555 1.74721 3.9077 1.74721 5.31817V14.1818C0.942814 15.1074 0.390323 16.2302 0.144386 17.4391C-0.101551 18.6481 -0.0324115 19.9013 0.344965 21.0748C0.722341 22.2483 1.39488 23.3014 2.29605 24.13C3.19722 24.9585 4.2958 25.5339 5.48313 25.799C5.97635 25.9132 6.47897 25.9804 6.98448 25.9999C8.33525 26.0063 9.65886 25.6147 10.7949 24.8726C11.9309 24.1305 12.8306 23.0698 13.3849 21.819C13.9393 20.5681 14.1244 19.1809 13.9179 17.8253C13.7115 16.4698 13.1223 15.2041 12.2217 14.1818ZM9.89407 22.5372C8.96806 23.3709 7.75382 23.797 6.51846 23.7216C5.28309 23.6463 4.12781 23.0757 3.30675 22.1354C2.48569 21.1951 2.06612 19.9621 2.14032 18.7076C2.21453 17.4532 2.77645 16.2801 3.70245 15.4463C3.81242 15.3369 3.89991 15.2063 3.95984 15.0623C4.01978 14.9183 4.05097 14.7636 4.05161 14.6072V5.31817C4.05161 4.53457 4.35815 3.78308 4.90381 3.22899C5.44946 2.67491 6.18953 2.36363 6.9612 2.36363C7.73287 2.36363 8.47294 2.67491 9.01859 3.22899C9.56425 3.78308 9.87079 4.53457 9.87079 5.31817V14.7018C9.87143 14.8581 9.90262 15.0128 9.96255 15.1569C10.0225 15.3009 10.11 15.4314 10.2199 15.5409C10.6957 16.0075 11.068 16.5718 11.3121 17.196C11.5562 17.8203 11.6666 18.4902 11.6357 19.1611C11.6049 19.8321 11.4336 20.4886 11.1333 21.0871C10.833 21.6855 10.4105 22.2121 9.89407 22.6318V22.5372Z"
            fill="#DFA1A1"
          />
        </svg>
      ),
    },
    {
      WeatherType: "Temp min",
      weatherval:
        (((weatherData?.main.temp_min - 32) * 5) / 9).toFixed(2) + "°",
      svg: (
        <svg
          width="14"
          height="26"
          viewBox="0 0 14 26"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M8.14831 16.8763V11.2272C8.14831 10.9138 8.02569 10.6132 7.80743 10.3916C7.58917 10.1699 7.29314 10.0454 6.98448 10.0454C6.67581 10.0454 6.37978 10.1699 6.16152 10.3916C5.94326 10.6132 5.82064 10.9138 5.82064 11.2272V16.8763C5.46884 17.0826 5.17632 17.3787 4.97214 17.7353C4.76797 18.0919 4.65925 18.4965 4.6568 18.909C4.6568 19.5359 4.90204 20.1371 5.33856 20.5804C5.77508 21.0236 6.36714 21.2727 6.98448 21.2727C7.60181 21.2727 8.19387 21.0236 8.63039 20.5804C9.06691 20.1371 9.31215 19.5359 9.31215 18.909C9.3097 18.4965 9.20098 18.0919 8.99681 17.7353C8.79263 17.3787 8.50011 17.0826 8.14831 16.8763ZM12.2217 14.1818V5.31817C12.2217 3.9077 11.67 2.555 10.6878 1.55765C9.7056 0.560305 8.37348 0 6.98448 0C5.59547 0 4.26335 0.560305 3.28117 1.55765C2.29899 2.555 1.74721 3.9077 1.74721 5.31817V14.1818C0.942814 15.1074 0.390323 16.2302 0.144386 17.4391C-0.101551 18.6481 -0.0324115 19.9013 0.344965 21.0748C0.722341 22.2483 1.39488 23.3014 2.29605 24.13C3.19722 24.9585 4.2958 25.5339 5.48313 25.799C5.97635 25.9132 6.47897 25.9804 6.98448 25.9999C8.33525 26.0063 9.65886 25.6147 10.7949 24.8726C11.9309 24.1305 12.8306 23.0698 13.3849 21.819C13.9393 20.5681 14.1244 19.1809 13.9179 17.8253C13.7115 16.4698 13.1223 15.2041 12.2217 14.1818ZM9.89407 22.5372C8.96806 23.3709 7.75382 23.797 6.51846 23.7216C5.28309 23.6463 4.12781 23.0757 3.30675 22.1354C2.48569 21.1951 2.06612 19.9621 2.14032 18.7076C2.21453 17.4532 2.77645 16.2801 3.70245 15.4463C3.81242 15.3369 3.89991 15.2063 3.95984 15.0623C4.01978 14.9183 4.05097 14.7636 4.05161 14.6072V5.31817C4.05161 4.53457 4.35815 3.78308 4.90381 3.22899C5.44946 2.67491 6.18953 2.36363 6.9612 2.36363C7.73287 2.36363 8.47294 2.67491 9.01859 3.22899C9.56425 3.78308 9.87079 4.53457 9.87079 5.31817V14.7018C9.87143 14.8581 9.90262 15.0128 9.96255 15.1569C10.0225 15.3009 10.11 15.4314 10.2199 15.5409C10.6957 16.0075 11.068 16.5718 11.3121 17.196C11.5562 17.8203 11.6666 18.4902 11.6357 19.1611C11.6049 19.8321 11.4336 20.4886 11.1333 21.0871C10.833 21.6855 10.4105 22.2121 9.89407 22.6318V22.5372Z"
            fill="#6D97CA"
          />
        </svg>
      ),
    },
    {
      WeatherType: "Humidity",
      weatherval: weatherData?.main.humidity + "%",
      svg: (
        <svg
          width="18"
          height="24"
          viewBox="0 0 18 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M16 16.3638C16 19.1811 13.1867 22 9 22C4.81327 22 2 19.1811 2 16.3638C2 13.4416 3.9006 9.8024 6.13452 6.6343C7.1442 5.20239 8.15754 3.95509 8.94997 3.03368C9.75748 4.02709 10.8053 5.37938 11.8493 6.90552C12.9378 8.49674 13.9966 10.2398 14.7767 11.9363C15.5711 13.6638 16 15.1806 16 16.3638ZM0 16.3638C0 10.927 5.13123 4.37097 7.64477 1.48563C8.4601 0.549704 9 0 9 0C9 0 9.51723 0.571768 10.3037 1.52955C12.7979 4.56699 18 11.4867 18 16.3638C18 20.5812 13.9706 24 9 24C4.02944 24 0 20.5812 0 16.3638ZM4.49834 13H6.64991C6.24509 13.9239 6 14.8001 6 15.5455C6 16.6901 7.11963 18 9 18V20C6.23858 20 4 18.0057 4 15.5455C4 14.7246 4.191 13.86 4.49834 13Z"
            fill="white"
          />
        </svg>
      ),
    },
    {
      WeatherType: "Cloudy",
      weatherval: weatherData?.clouds.all + "%",
      svg: (
        <svg
          width="22"
          height="22"
          viewBox="0 0 22 22"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M7.48923 4.75824C7.76737 4.72918 8.04955 4.71429 8.33508 4.71429C12.1542 4.71429 15.3734 7.37767 16.3594 11.0109C16.4383 11.0058 16.5177 11.0024 16.5975 11.0009C16.5651 11.0004 16.5326 11.0001 16.5 11.0001L16.4736 11.0001L16.4736 11H17.6785H17.7259V10.9996C19.2228 10.9743 20.4285 9.75298 20.4285 8.25C20.4285 6.73122 19.1973 5.5 17.6785 5.5C17.1686 5.5 16.6911 5.6388 16.2817 5.88068C16.2805 5.44168 16.2138 5.01807 16.0909 4.6191C15.4787 2.84544 13.7945 1.57143 11.8128 1.57143C9.77966 1.57143 8.05971 2.91245 7.48923 4.75824ZM19.7816 12.026C21.1248 13.0239 22 14.656 22 16.5C22 19.5375 19.6253 22 16.6959 22C16.6303 22 16.565 21.9987 16.5 21.9963V22H8.45988V21.9991C8.41835 21.9997 8.37675 22 8.33508 22C3.73174 22 0 18.1305 0 13.3571C0 9.50269 2.43331 6.23755 5.79395 5.1233C6.25971 2.21891 8.77714 0 11.8128 0C14.4174 0 16.6404 1.63337 17.5135 3.93167C17.5682 3.92961 17.6233 3.92857 17.6785 3.92857C20.0652 3.92857 22 5.86334 22 8.25C22 9.87321 21.105 11.2874 19.7816 12.026ZM16.5 20.4286H8.45988H8.36945V20.4285L8.33508 20.4286C4.65284 20.4286 1.57143 17.3168 1.57143 13.3571C1.57143 9.39751 4.65284 6.28571 8.33508 6.28571C11.4587 6.28571 14.15 8.52503 14.8947 11.6216L14.897 11.6206C15.0022 12.0503 15.0693 12.4957 15.0942 12.9529C15.5838 12.7075 16.1285 12.5714 16.6959 12.5714C18.7042 12.5714 20.4286 14.2761 20.4286 16.5C20.4286 18.7083 18.7282 20.4046 16.738 20.4283V20.4286H16.5Z"
            fill="white"
          />
        </svg>
      ),
    },
    {
      WeatherType: "Wind",
      weatherval: weatherData?.wind.speed + "5km/h",
      svg: (
        <svg
          width="24"
          height="19"
          viewBox="0 0 24 19"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M10.0001 3.99437L10.0001 3.98848L4.33939 3.98841L9.76934 2.02633L9.76876 2.02471C9.87275 1.9985 9.98036 1.98917 10.0875 1.99715C10.1016 1.99821 10.1157 1.99956 10.1298 2.00122L10.13 2.00125C10.2771 2.01857 10.4184 2.06835 10.5439 2.14699L10.5439 2.147C10.6694 2.22565 10.7759 2.33119 10.8556 2.456L10.8557 2.4562C10.9354 2.58102 10.9864 2.72199 11.0049 2.86892L11.005 2.8692C11.0235 3.01619 11.0092 3.16546 10.963 3.30623L10.963 3.30634C10.9168 3.44714 10.8398 3.57591 10.7378 3.68333L10.7377 3.68343C10.6356 3.79081 10.511 3.87416 10.3728 3.92747L10.3726 3.92757C10.3596 3.93258 10.3465 3.93731 10.3333 3.94176C10.226 3.97806 10.1133 3.99584 10.0001 3.99437ZM0 3.42958V5.98852L9.97957 5.98865C10.3586 5.9929 10.7355 5.92511 11.0903 5.78827L11.0905 5.78816C11.3605 5.68397 11.6132 5.54146 11.8412 5.36566C11.9625 5.27205 12.0768 5.16899 12.183 5.05725L12.1831 5.05715C12.4886 4.73555 12.7189 4.35005 12.8573 3.92853L12.8573 3.92842C12.9956 3.50691 13.0386 3.05991 12.9831 2.61975L12.9831 2.61947C12.9275 2.1793 12.7749 1.75698 12.5362 1.38303L12.5361 1.38283C12.2974 1.00884 11.9785 0.692604 11.6026 0.456991L11.6026 0.456979C11.472 0.375101 11.3356 0.303671 11.1947 0.243141C10.9302 0.12949 10.65 0.0542673 10.3625 0.0204703L10.3623 0.0204452C9.93403 -0.0298761 9.50007 0.0129745 9.09012 0.145888L9.08981 0.145035L9.05912 0.156123L9.05551 0.157341L9.05509 0.157482L9.05512 0.157571L0 3.42958ZM0 11.998V14.0525L13.2058 18.7506L13.2057 18.751C13.6836 18.9417 14.1977 19.0246 14.7113 18.9938C14.9088 18.982 15.1043 18.9534 15.2959 18.9088C15.6026 18.8373 15.8991 18.7245 16.1771 18.5728C16.6288 18.3264 17.0206 17.9833 17.3246 17.568C17.6286 17.1527 17.8372 16.6755 17.9357 16.1703C18.0342 15.6652 18.0201 15.1445 17.8943 14.6454C17.7686 14.1463 17.5344 13.6811 17.2083 13.283C17.0076 13.0379 16.7752 12.8219 16.5178 12.6404C16.357 12.527 16.1866 12.4271 16.008 12.3419C15.5443 12.1207 15.0376 12.0043 14.5239 12.0011V11.9981L0 11.998ZM14.5103 13.9983L5.8151 13.9982L13.9842 16.9045L13.9835 16.9065C14.1776 16.9782 14.3847 17.0089 14.5916 16.9964C14.8115 16.9833 15.0258 16.9217 15.2193 16.8162C15.4127 16.7106 15.5805 16.5637 15.7106 16.3859C15.8408 16.2081 15.9302 16.0037 15.9723 15.7874C16.0145 15.571 16.0085 15.3481 15.9546 15.1344C15.9008 14.9206 15.8005 14.7214 15.6608 14.5509C15.5212 14.3804 15.3457 14.2428 15.1468 14.1479C14.9483 14.0532 14.7312 14.0034 14.5112 14.002L14.5103 14.002L14.5103 14.0016L14.5103 13.9983ZM19.018 4.24812L19.0172 4.24861L18.0336 2.50716L18.0325 2.50515L18.0345 2.50404C18.567 2.2035 19.1613 2.02907 19.7718 1.99417C19.8603 1.98911 19.9489 1.987 20.0373 1.98783C20.559 1.99269 21.0757 2.09965 21.5579 2.3036C22.1218 2.54211 22.6234 2.90691 23.0241 3.36989C23.4248 3.83287 23.7139 4.38168 23.8692 4.97405C24.0245 5.56641 24.0417 6.18652 23.9197 6.78662C23.7976 7.38671 23.5395 7.95077 23.1651 8.43534C22.8451 8.84967 22.4474 9.19644 21.9952 9.45676C21.9185 9.50089 21.8403 9.54254 21.7606 9.58161C21.2108 9.85115 20.6066 9.99087 19.9944 9.99002V9.98973H0V7.98973H19.9972L19.9972 7.98756C20.303 7.98799 20.6049 7.9182 20.8795 7.78355C21.1541 7.64891 21.3941 7.45301 21.5811 7.21095C21.7681 6.96889 21.897 6.68712 21.958 6.38735C22.019 6.08759 22.0104 5.77782 21.9328 5.48191C21.8552 5.18601 21.7108 4.91186 21.5106 4.68058C21.3105 4.44931 21.0599 4.26708 20.7782 4.14794C20.4966 4.02879 20.1913 3.97591 19.886 3.99336C19.581 4.0108 19.2841 4.09795 19.018 4.24812Z"
            fill="white"
          />
        </svg>
      ),
    },
  ];

  const weathercloudsvg = [
    {
      clouds: (
        <svg
          width="74"
          height="56"
          viewBox="0 0 74 56"
          fill="none"
          xmlink="http://www.w3.org/2000/svg"
        >
          <path
            d="M41.4907 14.1486C52.8308 14.1486 59.2622 21.4663 60.1961 30.2996H60.4813C67.7777 30.2996 73.6938 36.0505 73.6938 43.1451C73.6938 50.2396 67.7777 55.9906 60.4813 55.9906H22.5C15.2037 55.9906 9.2875 50.2396 9.2875 43.1451C9.2875 36.0505 15.2037 30.2996 22.5 30.2996H22.7852C23.7283 21.4059 30.1506 14.1486 41.4907 14.1486ZM29.4927 0.201294C36.1909 0.201294 42.0335 4.05075 44.918 9.70872C43.7809 9.56782 42.6363 9.49795 41.4907 9.49951C30.4956 9.49951 22.4816 15.5759 19.6201 24.7765L19.3349 25.7714L19.1233 26.6408L18.3642 26.7802C15.586 27.3521 12.9911 28.61 10.8109 30.4417C8.6307 32.2734 6.93305 34.622 5.86936 37.2779C3.67775 35.9285 1.96912 33.9079 0.991847 31.5099C0.0145745 29.1118 -0.180401 26.4612 0.435265 23.9435C1.05093 21.4258 2.44514 19.1721 4.41524 17.51C6.38533 15.848 8.82861 14.8643 11.3899 14.7019L12.4112 14.6786C13.1206 10.6215 15.2216 6.94655 18.3453 4.29905C21.469 1.65156 25.4158 0.200734 29.4927 0.201294Z"
            fill="#FFF"
          />
        </svg>
      ),
    },
    {
      mist: (
        <svg
          fill="#FFF"
          version="1.1"
          id="Capa_1"
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          width="57"
          height="57"
          viewBox="0 0 66.002 66.002"
          xml:space="preserve"
        >
          <g>
            <path
              d="M1.553,39.29h62.896c0.857,0,1.553-0.527,1.553-1.175c0-0.649-0.695-1.176-1.553-1.176H1.553
    C0.696,36.939,0,37.466,0,38.115C0,38.763,0.696,39.29,1.553,39.29z M64.449,43.989H1.553C0.695,43.989,0,44.515,0,45.165
    c0,0.646,0.696,1.174,1.553,1.174h62.896c0.857,0,1.553-0.527,1.553-1.174C66.002,44.515,65.307,43.989,64.449,43.989z
     M64.449,51.33H1.553C0.695,51.33,0,51.855,0,52.505c0,0.647,0.696,1.176,1.553,1.176h62.896c0.857,0,1.553-0.527,1.553-1.176
    S65.307,51.33,64.449,51.33z M13.491,23.33c1.434,0,2.838,0.275,4.174,0.819c0.319,0.131,0.68,0.113,0.986-0.047
    c0.306-0.159,0.526-0.446,0.603-0.782c1.149-5.092,5.599-8.649,10.82-8.649c2.591,0,5.115,0.915,7.105,2.574
    c0.396,0.332,0.965,0.364,1.396,0.081c2.646-1.737,5.714-2.655,8.873-2.655c8.936,0,16.202,7.268,16.202,16.2
    c0,0.992-0.104,1.959-0.275,2.902h2.374C65.9,32.826,66,31.861,66,30.871c0-10.229-8.322-18.55-18.552-18.55
    c-3.335,0-6.582,0.893-9.44,2.591c-2.297-1.676-5.081-2.591-7.936-2.591c-5.885,0-10.961,3.729-12.763,9.216
    c-1.24-0.37-2.52-0.557-3.82-0.557c-7.195,0-13.072,5.684-13.418,12.793h2.35C2.766,27.959,7.592,23.33,13.491,23.33z"
            />
          </g>
        </svg>
      ),
    },
    {
      sunny: (
        <svg
          width="57"
          height="57"
          viewBox="0 0 57 57"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M28.5533 0.937378C29.1085 0.937378 29.641 1.15794 30.0336 1.55056C30.4262 1.94317 30.6468 2.47566 30.6468 3.0309V7.21794C30.6468 7.77318 30.4262 8.30567 30.0336 8.69828C29.641 9.09089 29.1085 9.31146 28.5533 9.31146C27.998 9.31146 27.4655 9.09089 27.0729 8.69828C26.6803 8.30567 26.4597 7.77318 26.4597 7.21794V3.0309C26.4597 2.47566 26.6803 1.94317 27.0729 1.55056C27.4655 1.15794 27.998 0.937378 28.5533 0.937378ZM42.5101 28.851C42.5101 32.5526 41.0396 36.1025 38.4222 38.7199C35.8048 41.3373 32.2548 42.8078 28.5533 42.8078C24.8517 42.8078 21.3017 41.3373 18.6843 38.7199C16.0669 36.1025 14.5965 32.5526 14.5965 28.851C14.5965 25.1494 16.0669 21.5994 18.6843 18.982C21.3017 16.3646 24.8517 14.8942 28.5533 14.8942C32.2548 14.8942 35.8048 16.3646 38.4222 18.982C41.0396 21.5994 42.5101 25.1494 42.5101 28.851ZM54.3733 30.9445C54.9286 30.9445 55.4611 30.7239 55.8537 30.3313C56.2463 29.9387 56.4669 29.4062 56.4669 28.851C56.4669 28.2957 56.2463 27.7633 55.8537 27.3706C55.4611 26.978 54.9286 26.7575 54.3733 26.7575H50.1863C49.6311 26.7575 49.0986 26.978 48.706 27.3706C48.3133 27.7633 48.0928 28.2957 48.0928 28.851C48.0928 29.4062 48.3133 29.9387 48.706 30.3313C49.0986 30.7239 49.6311 30.9445 50.1863 30.9445H54.3733ZM28.5533 48.3905C29.1085 48.3905 29.641 48.6111 30.0336 49.0037C30.4262 49.3963 30.6468 49.9288 30.6468 50.484V54.6711C30.6468 55.2263 30.4262 55.7588 30.0336 56.1514C29.641 56.544 29.1085 56.7646 28.5533 56.7646C27.998 56.7646 27.4655 56.544 27.0729 56.1514C26.6803 55.7588 26.4597 55.2263 26.4597 54.6711V50.484C26.4597 49.9288 26.6803 49.3963 27.0729 49.0037C27.4655 48.6111 27.998 48.3905 28.5533 48.3905ZM6.92021 30.9445C7.47545 30.9445 8.00794 30.7239 8.40055 30.3313C8.79316 29.9387 9.01373 29.4062 9.01373 28.851C9.01373 28.2957 8.79316 27.7633 8.40055 27.3706C8.00794 26.978 7.47545 26.7575 6.92021 26.7575H2.73317C2.17793 26.7575 1.64544 26.978 1.25283 27.3706C0.860215 27.7633 0.639648 28.2957 0.639648 28.851C0.639648 29.4062 0.860215 29.9387 1.25283 30.3313C1.64544 30.7239 2.17793 30.9445 2.73317 30.9445H6.92021ZM6.83647 7.1342C7.229 6.74215 7.76111 6.52194 8.31589 6.52194C8.87068 6.52194 9.40278 6.74215 9.79531 7.1342L13.9824 11.3212C14.3522 11.7181 14.5535 12.243 14.5439 12.7854C14.5343 13.3277 14.3146 13.8452 13.9311 14.2288C13.5475 14.6124 13.03 14.8321 12.4876 14.8416C11.9453 14.8512 11.4204 14.6499 11.0235 14.2801L6.83647 10.093C6.44442 9.70051 6.22421 9.1684 6.22421 8.61362C6.22421 8.05884 6.44442 7.52673 6.83647 7.1342ZM9.79531 50.5678C9.60365 50.7735 9.37253 50.9384 9.11572 51.0529C8.85892 51.1673 8.5817 51.2288 8.3006 51.2338C8.0195 51.2387 7.74028 51.187 7.4796 51.0817C7.21892 50.9764 6.98212 50.8197 6.78333 50.6209C6.58453 50.4221 6.42781 50.1853 6.32252 49.9246C6.21722 49.664 6.16551 49.3847 6.17047 49.1036C6.17543 48.8225 6.23696 48.5453 6.35138 48.2885C6.46581 48.0317 6.63078 47.8006 6.83647 47.6089L11.0235 43.4219C11.2152 43.2162 11.4463 43.0512 11.7031 42.9368C11.9599 42.8224 12.2371 42.7609 12.5182 42.7559C12.7993 42.7509 13.0785 42.8026 13.3392 42.9079C13.5999 43.0132 13.8367 43.1699 14.0355 43.3687C14.2343 43.5675 14.391 43.8043 14.4963 44.065C14.6016 44.3257 14.6533 44.6049 14.6483 44.886C14.6434 45.1671 14.5819 45.4443 14.4674 45.7011C14.353 45.9579 14.188 46.1891 13.9824 46.3807L9.79531 50.5678ZM50.27 7.1342C49.8775 6.74215 49.3454 6.52194 48.7906 6.52194C48.2358 6.52194 47.7037 6.74215 47.3112 7.1342L43.1242 11.3212C42.7544 11.7181 42.553 12.243 42.5626 12.7854C42.5722 13.3277 42.7919 13.8452 43.1755 14.2288C43.559 14.6124 44.0765 14.8321 44.6189 14.8416C45.1612 14.8512 45.6861 14.6499 46.083 14.2801L50.27 10.093C50.6621 9.70051 50.8823 9.1684 50.8823 8.61362C50.8823 8.05884 50.6621 7.52673 50.27 7.1342ZM47.3112 50.5678C47.5029 50.7735 47.734 50.9384 47.9908 51.0529C48.2476 51.1673 48.5248 51.2288 48.8059 51.2338C49.087 51.2387 49.3662 51.187 49.6269 51.0817C49.8876 50.9764 50.1244 50.8197 50.3232 50.6209C50.522 50.4221 50.6787 50.1853 50.784 49.9246C50.8893 49.664 50.941 49.3847 50.936 49.1036C50.9311 48.8225 50.8695 48.5453 50.7551 48.2885C50.6407 48.0317 50.4757 47.8006 50.27 47.6089L46.083 43.4219C45.8913 43.2162 45.6602 43.0512 45.4034 42.9368C45.1466 42.8224 44.8694 42.7609 44.5883 42.7559C44.3072 42.7509 44.028 42.8026 43.7673 42.9079C43.5066 43.0132 43.2698 43.1699 43.071 43.3687C42.8722 43.5675 42.7155 43.8043 42.6102 44.065C42.5049 44.3257 42.4532 44.6049 42.4582 44.886C42.4631 45.1671 42.5246 45.4443 42.6391 45.7011C42.7535 45.9579 42.9185 46.1891 43.1242 46.3807L47.3112 50.5678Z"
            fill="#EFAA82"
          />
        </svg>
      ),
    },
    {
      snow: (
        <svg
          width="74"
          height="56"
          viewBox="0 0 74 56"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M41.4436 14.1184C52.7915 14.1184 59.2273 21.4411 60.1618 30.2804H60.4472C67.7485 30.2804 73.6687 36.0353 73.6687 43.1346C73.6687 50.234 67.7485 55.9888 60.4472 55.9888H22.4401C15.1388 55.9888 9.21856 50.234 9.21856 43.1346C9.21856 36.0353 15.1388 30.2804 22.4401 30.2804H22.7255C23.6692 21.3806 30.0958 14.1184 41.4436 14.1184ZM29.4375 0.161621C36.1403 0.161621 41.9869 4.0137 44.8733 9.67551C43.7354 9.53452 42.59 9.4646 41.4436 9.46616C30.4411 9.46616 22.4216 15.5467 19.5582 24.7535L19.2728 25.7491L19.061 26.6191L18.3014 26.7586C15.5214 27.3309 12.9247 28.5896 10.743 30.4226C8.56132 32.2555 6.86251 34.6057 5.7981 37.2635C3.605 35.9132 1.89521 33.8912 0.91727 31.4915C-0.0606673 29.0918 -0.255775 26.4394 0.360309 23.92C0.976393 21.4005 2.37156 19.1453 4.34299 17.4821C6.31442 15.819 8.75936 14.8346 11.3224 14.672L12.3444 14.6488C13.0543 10.5889 15.1567 6.91146 18.2825 4.26217C21.4084 1.61288 25.3578 0.161061 29.4375 0.161621Z"
            fill="#E4F1F9"
          />
        </svg>
      ),
    },
    {
      rain: (
        <svg
          width="59"
          height="61"
          viewBox="0 0 59 61"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M54.692 15.7473C52.5902 13.6505 49.7828 12.1866 46.5242 11.486C46.2187 11.4203 45.9328 11.2841 45.6893 11.0882C45.4458 10.8924 45.2514 10.6423 45.1217 10.3581C43.9234 7.74081 42.1092 5.45266 39.834 3.68922C36.9226 1.4621 33.382 0.285245 29.5933 0.285245C25.276 0.27154 21.1048 1.84725 17.8749 4.71192C14.8419 7.41404 12.7476 11.1464 11.8051 15.469C11.7265 15.8349 11.5474 16.1717 11.2879 16.4413C11.0284 16.711 10.6988 16.9029 10.3362 16.9956C7.20298 17.7851 5.86069 18.5672 4.16873 20.0737C1.76991 22.2093 0.516602 25.1182 0.516602 28.4595C0.516602 32.2884 1.92406 35.4329 4.58608 37.5535C6.91848 39.4097 10.1044 40.391 13.8016 40.391H43.129C47.2899 40.391 51.1639 38.9547 54.0327 36.3453C57.0206 33.6319 58.6699 29.8695 58.6699 25.7524C58.6699 21.8057 57.2913 18.3466 54.692 15.7473Z"
            fill="#C9E8E0"
          />
          <path
            d="M11.5451 54.4278C11.1822 54.4276 10.8261 54.3289 10.5149 54.1423C10.2037 53.9556 9.94893 53.688 9.77784 53.3679C9.60675 53.0479 9.52572 52.6874 9.5434 52.3249C9.56107 51.9624 9.67679 51.6115 9.8782 51.3096L13.8888 45.2938C14.0349 45.0747 14.2228 44.8866 14.4417 44.7401C14.6605 44.5936 14.9061 44.4917 15.1643 44.4402C15.4226 44.3886 15.6885 44.3884 15.9468 44.4396C16.2051 44.4908 16.4508 44.5924 16.6699 44.7385C16.8889 44.8847 17.0771 45.0726 17.2235 45.2914C17.37 45.5103 17.4719 45.7559 17.5235 46.0141C17.575 46.2723 17.5752 46.5382 17.524 46.7965C17.4728 47.0549 17.3712 47.3006 17.2251 47.5196L13.2145 53.5355C13.0312 53.8102 12.7829 54.0354 12.4917 54.191C12.2005 54.3467 11.8753 54.4281 11.5451 54.4278Z"
            fill="#C9E8E0"
          />
          <path
            d="M17.5624 60.4437C17.1996 60.4433 16.8437 60.3444 16.5326 60.1576C16.2216 59.9709 15.967 59.7032 15.7961 59.3832C15.6252 59.0632 15.5442 58.7028 15.562 58.3404C15.5797 57.9781 15.6954 57.6273 15.8968 57.3255L23.9179 45.2938C24.0641 45.0747 24.2519 44.8866 24.4708 44.7401C24.6897 44.5936 24.9352 44.4917 25.1935 44.4402C25.4517 44.3886 25.7176 44.3884 25.9759 44.4396C26.2342 44.4908 26.4799 44.5924 26.699 44.7385C26.9181 44.8847 27.1062 45.0726 27.2527 45.2914C27.3991 45.5103 27.501 45.7559 27.5526 46.0141C27.6041 46.2723 27.6043 46.5382 27.5531 46.7965C27.5019 47.0549 27.4004 47.3006 27.2542 47.5196L19.2331 59.5514C19.0497 59.8262 18.8012 60.0515 18.5097 60.2072C18.2183 60.3629 17.8928 60.4441 17.5624 60.4437Z"
            fill="#C9E8E0"
          />
          <path
            d="M31.5988 54.4279C31.2359 54.4276 30.8798 54.3289 30.5686 54.1423C30.2574 53.9556 30.0026 53.688 29.8315 53.3679C29.6605 53.0479 29.5794 52.6874 29.5971 52.3249C29.6148 51.9624 29.7305 51.6115 29.9319 51.3096L33.9425 45.2938C34.2377 44.8513 34.6965 44.5443 35.218 44.4402C35.7396 44.3361 36.2812 44.4434 36.7236 44.7386C37.166 45.0337 37.473 45.4926 37.5772 46.0141C37.6813 46.5357 37.574 47.0772 37.2788 47.5196L33.2682 53.5355C33.0849 53.8102 32.8367 54.0354 32.5454 54.1911C32.2542 54.3467 31.929 54.4281 31.5988 54.4279Z"
            fill="#C9E8E0"
          />
          <path
            d="M37.6144 60.4437C37.2515 60.4435 36.8955 60.3448 36.5842 60.1581C36.273 59.9715 36.0183 59.7038 35.8472 59.3838C35.6761 59.0637 35.5951 58.7033 35.6127 58.3408C35.6304 57.9783 35.7461 57.6274 35.9475 57.3255L43.9687 45.2938C44.2639 44.8513 44.7227 44.5443 45.2442 44.4402C45.7658 44.3361 46.3074 44.4434 46.7498 44.7386C47.1922 45.0337 47.4992 45.4926 47.6034 46.0141C47.7075 46.5357 47.6002 47.0772 47.305 47.5196L39.2838 59.5514C39.1006 59.8261 38.8523 60.0512 38.5611 60.2069C38.2698 60.3626 37.9447 60.4439 37.6144 60.4437Z"
            fill="#C9E8E0"
          />
        </svg>
      ),
    },
    {
      clear: (
        <svg
          width="70"
          height="70"
          viewBox="0 0 70 70"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clipPath="url(#clip0_129_5349)">
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M25.2257 17.6224C26.0001 17.5415 26.7857 17.5 27.5806 17.5C38.2133 17.5 47.1758 24.9151 49.921 35.0303C50.1407 35.0161 50.3618 35.0068 50.584 35.0026C50.4937 35.001 50.4031 35.0002 50.3124 35.0002L50.2391 35.0004L50.239 35H53.5937H53.7254V34.9989C57.8931 34.9286 61.2499 31.5282 61.2499 27.3438C61.2499 23.1153 57.8221 19.6875 53.5937 19.6875C52.1739 19.6875 50.8445 20.0739 49.7047 20.7474C49.7013 19.5251 49.5157 18.3458 49.1736 17.235C47.4691 12.297 42.7802 8.75 37.263 8.75C31.6025 8.75 26.814 12.4835 25.2257 17.6224ZM59.4489 37.8566C63.1884 40.6347 65.625 45.1785 65.625 50.3125C65.625 58.7693 59.0135 65.6249 50.8578 65.6249C50.6753 65.6249 50.4935 65.6215 50.3125 65.6147V65.625H27.9281V65.6224C27.8125 65.6241 27.6966 65.625 27.5806 65.625C14.7645 65.625 4.375 54.8519 4.375 41.5625C4.375 30.8313 11.1495 21.7409 20.5059 18.6387C21.8026 10.5526 28.8114 4.375 37.263 4.375C44.5142 4.375 50.7034 8.92246 53.1341 15.3211C53.2866 15.3154 53.4398 15.3125 53.5937 15.3125C60.2384 15.3125 65.6249 20.6991 65.6249 27.3438C65.6249 31.8629 63.1333 35.8001 59.4489 37.8566ZM50.3125 61.25H27.9281H27.6763V61.2497L27.5806 61.25C17.3289 61.25 8.75 52.5865 8.75 41.5625C8.75 30.5385 17.3289 21.875 27.5806 21.875C36.2772 21.875 43.77 28.1095 45.8431 36.7306L45.8497 36.7279C46.1425 37.9241 46.3292 39.1643 46.3987 40.437C47.7617 39.7538 49.2782 39.375 50.8578 39.375C56.4491 39.375 61.25 44.121 61.25 50.3125C61.25 56.4606 56.5161 61.1834 50.9752 61.2492V61.25H50.3125Z"
              fill="white"
            />
          </g>
          <defs>
            <clipPath id="clip0_129_5349">
              <rect width="70" height="70" fill="white" />
            </clipPath>
          </defs>
        </svg>
      ),
    },
  ];

  useEffect(() => {
    fetchWeather();
  }, []);

  useEffect(() => {
    fetch3HoursWeather();
  }, []);

  const fetchWeather = async () => {
    const lat = state.LocData.lat;
    const lon = state.LocData.lon;
    const data = await FetchWetherForcast(lat, lon);
    if(!data){
      return toast.error("Network Error or Something went wrong", {position:'top-center'})
    }
    SetWeatherData(data);
  };

  const fetch3HoursWeather = async () => {
    const lat = state.LocData.lat;
    const lon = state.LocData.lon;
    const data = await Fetch3HoursWetherForcast(lat, lon);
    if (!data) {
        return toast.error("Network Error or Something went wrong", {position:'top-center'})
      
    }
    Set3HourWeatherData(data);
  };

  function addZero(num) {
    return (num < 10 ? "0" : "") + num;
  }

  const getWeatherTimezone = (timestamp) => {
    var milliseconds = timestamp * 1000;
    var date = new Date(milliseconds);
    var monthNames = [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec",
    ];
    var dayNames = [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday",
    ];
    var formattedDate =
      addZero(date.getHours()) +
      ":" +
      addZero(date.getMinutes()) +
      " - " +
      dayNames[date.getDay()] +
      ", " +
      date.getDate() +
      " " +
      monthNames[date.getMonth()] +
      " '" +
      (date.getFullYear() + "").substr(2);

    return formattedDate;
  };

  const selectBgImg = (forcast) => {
    if (forcast === "Clouds") {
      return clouds;
    } else if (
      forcast === "Haze" ||
      forcast === "Mist" ||
      forcast === "Smoke"
    ) {
      return mist;
    } else if (forcast === "Rain") {
      return rain;
    } else if (forcast === "Clear") {
      return clear;
    }
  };

  const selectcloudsvg = (forcast) => {
    if (forcast === "Clouds") {
      return weathercloudsvg[0].clouds;
    } else if (
      forcast === "Haze" ||
      forcast === "Mist" ||
      forcast === "Smoke"
    ) {
      return weathercloudsvg[1].mist;
    } else if (forcast === "Rain") {
      return weathercloudsvg[4].rain;
    } else if (forcast === "Clear") {
      return weathercloudsvg[5].clear;
    }
  };

  
  const _3HourlyDate = (dateString) => {
    const time = dateString.split(" ")[1];
    const timestamps = time.split(":").slice(0, 2).join(":");
    const IsAmOrPm= Number(time.slice(0,2))>12?" Pm":' Am'
    return timestamps+ IsAmOrPm
  };

  return (
    <main

      style={{
        backgroundImage: `url(${selectBgImg(weatherData?.weather[0].main)})`,
      }}
      className={styles.weathercontainer}
    >
      <ToastContainer/>
      <section className={styles.temp}>
        <div className={styles.citytemp}>
          <h1>{(((weatherData?.main.temp - 32) * 5) / 9).toFixed(2)}°</h1>
          <div>
            <div className={styles.citydata}>
              <div>
                <h2>{weatherData?.name}</h2>
                <p>{getWeatherTimezone(weatherData?.dt)}</p>
              </div>
              <div>{selectcloudsvg(weatherData?.weather[0].main)}</div>
            </div>
          </div>
        </div>
      </section>

      <section className={styles.weatherdetails}>
        <p style={{ marginTop: "10px" }}>Weather Details...</p>
        <div>
          <h4 >
            {weatherData?.weather[0].description}
          </h4>
          {WeatherList.map((weather, index) => (
            <div key={index} className={styles.weathers}>
              <p>{weather.WeatherType}</p>
              <span>
                <b>{weather.weatherval}</b>
                {weather.svg}
              </span>
            </div>
          ))}
        </div>
        <div>
          <h4> 3-hour step Forecast</h4>
          <div className={styles._3hoursfrocast}>
          {_3HourweatherData?.map((data, index) => (
              <div className={styles.Hourlydata}  key={index} >
                <p>
                  {_3HourlyDate(data.dt_txt)} 
                </p>
                <div>{selectcloudsvg(data?.weather[0].main)}</div>
                <p >
                  {(((data?.main.temp - 32) * 5) / 9).toFixed(2)}°
                </p>
              </div>
          ))}
          </div>
        </div>
      </section>
    </main>
  );
};

export default WeatherForcast;
